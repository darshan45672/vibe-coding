name: Code Quality

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]

jobs:
  code-quality:
    name: ðŸ“Š Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with detailed output
        run: |
          npx eslint . --ext .js,.jsx,.ts,.tsx --format json --output-file eslint-results.json || true
          npx eslint . --ext .js,.jsx,.ts,.tsx

      - name: Run Prettier check
        run: npm run format:check

      - name: Run TypeScript check
        run: npm run type-check

      - name: Calculate code metrics
        run: |
          echo "## ðŸ“Š Code Quality Metrics" >> $GITHUB_STEP_SUMMARY
          echo "### File Counts" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript files: $(find . -name "*.ts" -not -path "./node_modules/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript React files: $(find . -name "*.tsx" -not -path "./node_modules/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- JavaScript files: $(find . -name "*.js" -not -path "./node_modules/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- JavaScript React files: $(find . -name "*.jsx" -not -path "./node_modules/*" | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "### Lines of Code" >> $GITHUB_STEP_SUMMARY
          echo "- Total lines: $(find . -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | grep -v node_modules | xargs wc -l | tail -1)" >> $GITHUB_STEP_SUMMARY

      - name: Upload quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            eslint-results.json
